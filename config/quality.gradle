apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

// Add findbugs, pmd and lint to the check task.
check.dependsOn 'findbugs', 'pmd', 'lint'

task findbugs(type: FindBugs) {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${project.rootDir}/config/quality/findbugs/findbugs-filter.xml")
    println "${project.buildDir}/intermediates/classes/"
    classes = files("${project.buildDir}/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/outputs/findbugs/findbugs.xml"
        }
        html {
            destination "$project.buildDir/outputs/findbugs/findbugs.html"
        }
    }

    classpath = files()
}

task pmd(type: Pmd) {
    ruleSetFiles = files("${project.rootDir}/config/quality/pmd/pmd-ruleset.xml")
    ignoreFailures = false
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination "$project.buildDir/outputs/pmd/pmd.xml"
        }
        html {
            destination "$project.buildDir/outputs/pmd/pmd.html"
        }
    }
}


task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
}

android {
    lintOptions {
        abortOnError true

        lintConfig file("${project.rootDir}/config/quality/lint/lint.xml")


        htmlReport true
        htmlOutput file("$project.buildDir/outputs/lint/lint-report.html")

        xmlReport true
        xmlOutput file("$project.buildDir/outputs/lint/lint-report.xml")

    }
}

